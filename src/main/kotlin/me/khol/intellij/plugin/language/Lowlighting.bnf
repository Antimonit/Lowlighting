{
  parserClass="me.khol.intellij.plugin.language.parser.LowlightingParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Lowlighting"
  psiImplClassSuffix="Impl"
  psiPackage="me.khol.intellij.plugin.language.psi"
  psiImplPackage="me.khol.intellij.plugin.language.psi.impl"

  elementTypeHolderClass="me.khol.intellij.plugin.language.psi.LowlightingTypes"
  elementTypeClass="me.khol.intellij.plugin.language.psi.LowlightingElementType"
  tokenTypeClass="me.khol.intellij.plugin.language.psi.LowlightingTokenType"

  psiImplUtilClass="me.khol.intellij.plugin.language.psi.impl.LowlightingPsiImplUtil"
}

lowlightingFile ::= expression*

private expression ::= (record | COMMENT | EOL)

record ::= key ASSIGNMENT severity

key ::= KEY_TOKEN {
  mixin="me.khol.intellij.plugin.language.psi.impl.LowlightingNamedElementImpl"
  implements="me.khol.intellij.plugin.language.psi.LowlightingNamedElement"
  methods=[getName setName getNameIdentifier]
}

severity ::= SEVERITY_TOKEN {
  mixin="me.khol.intellij.plugin.language.psi.impl.LowlightingNamedElementImpl"
  implements="me.khol.intellij.plugin.language.psi.LowlightingNamedElement"
  methods=[getName setName getNameIdentifier]
}

// Right click this file -> "Generate Parser Code" when done.
// We still have to configure the .flex file to map tokens (e.g. END_OF_LINE_COMMENT) to elements (e.g. COMMENT).
